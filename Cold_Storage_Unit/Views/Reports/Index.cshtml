@model  Cold_Storage_Unit.Models.ReportsViewModel

@{
    ViewBag.Title = "Banana Cold Storage";
}
@{
    var hasFilters = !string.IsNullOrEmpty(ViewBag.SelectedName as string) ||
                     !string.IsNullOrEmpty(ViewBag.StartDate as string) ||
                     !string.IsNullOrEmpty(ViewBag.EndDate as string);
}

@{
    var hasDoorStatusFilters = !string.IsNullOrEmpty(ViewBag.Selectedstatus as string) ||
                               !string.IsNullOrEmpty(ViewBag.StartDate1 as string) ||
                               !string.IsNullOrEmpty(ViewBag.EndDate1 as string);
}

<div class="container mt-4 gap-1">
    <div class="row">
        @{
            var selectedTableType = ViewBag.TableType as string ?? "";
        }

        <!-- 🔽 This remains always visible -->
        <div class="col-md-6">
            <div class="card w-100">
                <div class="card-header bg-info text-white fs-5">
                    Sort By Table
                </div>
                <div class="card-body">
                    <form method="get" action="@Url.Action("Index", "Reports")" class="mb-4">
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label for="tableType" class="form-label"><strong>Sort By Table</strong></label>
                                <select id="tableType" name="tableType" class="form-control" onchange="this.form.submit()">
                                    <option value="">-- Select --</option>
                                    <option value="SensorData" @(selectedTableType == "SensorData" ? "selected" : "")>SensorData</option>
                                    <option value="DoorStatus" @(selectedTableType == "DoorStatus" ? "selected" : "")>DoorStatus</option>
                                </select>
                            </div>
                        </div>
                        @if (selectedTableType == "SensorData")
                        {
                            <!-- 🔼 Top filter row -->
                            <div class="row">
                                <div class="col-md-4">
                                    <label><strong>Name</strong></label>
                                    <select name="name" class="form-control">
                                        <option value="">All</option>
                                        @foreach (var item in ViewBag.Names as List<string>)
                                        {
                                            <option value="@item" @(item == (string)ViewBag.SelectedName ? "selected" : "")>@item</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label><strong>From</strong></label>
                                    <input type="date" name="startDate" value="@(ViewBag.StartDate ?? "")" class="form-control" />
                                </div>
                                <div class="col-md-4">
                                    <label><strong>To</strong></label>
                                    <input type="date" name="endDate" value="@(ViewBag.EndDate ?? "")" class="form-control" />
                                </div>

                            </div>

                            <!-- ⬇️ Button row -->
                            if (Model.ColdStorageData != null && Model.ColdStorageData.Any())
                            {

                                <div class="row mt-3">
                                    <div class="d-flex flex-wrap gap-2 px-2">
                                        <button type="submit" class="btn btn-primary btn-sm flex-fill" style="min-width: 100px;">Sort</button>

                                        <a class="btn btn-warning btn-sm flex-fill"
                                           style="min-width: 100px;"
                                           href="@Url.Action("GeneratePdfSummaryReport", "Reports", new { name = ViewBag.SelectedName, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">
                                            <i class="fas fa-file-pdf"></i> PDF
                                        </a>

                                        <a class="btn btn-success btn-sm flex-fill"
                                           style="min-width: 100px;"
                                           href="@Url.Action("GenerateExcelSummaryReport", "Reports", new { name = ViewBag.SelectedName, startDate = ViewBag.StartDate, endDate = ViewBag.EndDate })">
                                            <i class="fas fa-file-excel"></i> Excel
                                        </a>
                                    </div>
                                </div>

                            }
                        }
                        else if (selectedTableType == "DoorStatus")
                        {
                            <!-- 🔼 Top filter row -->
                            <div class="row">
                                <div class="col-md-4">
                                    <label><strong>Status</strong></label>
                                    <select name="status" class="form-control">
                                        <option value="">All</option>
                                        @foreach (var status in ViewBag.StatusList as List<string>)
                                        {
                                            <option value="@status" @(status == (string)ViewBag.Selectedstatus ? "selected" : "")>@status</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label><strong>From</strong></label>
                                    <input type="date" name="startDate1" value="@(ViewBag.StartDate1 ?? "")" class="form-control" />
                                </div>
                                <div class="col-md-4">
                                    <label><strong>To</strong></label>
                                    <input type="date" name="endDate1" value="@(ViewBag.EndDate1 ?? "")" class="form-control" />
                                </div>

                            </div>

                            <!-- ⬇️ Button row -->
                            if (Model.DoorStatusData != null && Model.DoorStatusData.Any())
                            {
                                <div class="row mt-3">
                                    <div class="d-flex flex-wrap gap-2 px-2">
                                        <button type="submit" class="btn btn-primary btn-sm flex-fill" style="min-width: 100px;">Sort</button>

                                        <a class="btn btn-warning btn-sm flex-fill"
                                           style="min-width: 100px;"
                                           href="@Url.Action("GenerateDoorStatusPdfReport", "Reports", new { status = ViewBag.Selectedstatus, startDate = ViewBag.StartDate1, endDate = ViewBag.EndDate1 })">
                                            <i class="fas fa-file-pdf"></i> PDF
                                        </a>

                                        <a class="btn btn-success btn-sm flex-fill"
                                           style="min-width: 100px;"
                                           href="@Url.Action("GenerateDoorStatusExcelReport", "Reports", new { status = ViewBag.Selectedstatus, startDate = ViewBag.StartDate1, endDate = ViewBag.EndDate1 })">
                                            <i class="fas fa-file-excel"></i> Excel
                                        </a>
                                    </div>
                                </div>

                            }
                        }

                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            @if (selectedTableType == "SensorData")
            {
                <div class="card w-100 mt-md-0 mt-4">
                    <div class="card-header bg-info text-white fs-5">
                        Summary Metrics
                    </div>
                    <div class="card-body">
                        @if (hasFilters && Model.ColdStorageData != null && Model.ColdStorageData.Any())
                        {
                            var avgTemp = Model.ColdStorageData.Average(x => x.Temperature);
                            var minTemp = Model.ColdStorageData.Min(x => x.Temperature);
                            var maxTemp = Model.ColdStorageData.Max(x => x.Temperature);

                            var avgHum = Model.ColdStorageData.Average(x => x.Humidity);
                            var minHum = Model.ColdStorageData.Min(x => x.Humidity);
                            var maxHum = Model.ColdStorageData.Max(x => x.Humidity);

                            var avgEth = Model.ColdStorageData.Average(x => x.EthyleneLevel);
                            var minEth = Model.ColdStorageData.Min(x => x.EthyleneLevel);
                            var maxEth = Model.ColdStorageData.Max(x => x.EthyleneLevel);

                            var avgco2 = Model.ColdStorageData.Average(x => x.Co2Level);
                            var minco2 = Model.ColdStorageData.Min(x => x.Co2Level);
                            var maxco2 = Model.ColdStorageData.Max(x => x.Co2Level);

                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Metric</th>
                                            <th>Temperature (°C)</th>
                                            <th>Humidity (%)</th>
                                            <th>CO2(ppm)</th>
                                            <th>Ethylene (ppm)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td><strong>Average</strong></td>
                                            <td>@(Math.Truncate(avgTemp * 10) / 10)</td>
                                            <td>@(Math.Truncate(avgHum * 10) / 10)</td>
                                            <td>@(Math.Truncate(avgco2 * 10) / 10)</td>
                                            <td>@(Math.Truncate(avgEth * 10) / 10)</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Minimum</strong></td>
                                            <td>@(Math.Truncate(minTemp * 10) / 10)</td>
                                            <td>@(Math.Truncate(minHum * 10) / 10)</td>
                                            <td>@(Math.Truncate(minco2 * 10) / 10)</td>
                                            <td>@(Math.Truncate(minEth * 10) / 10)</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Maximum</strong></td>
                                            <td>@(Math.Truncate(maxTemp * 10) / 10)</td>
                                            <td>@(Math.Truncate(maxHum * 10) / 10)</td>
                                            <td>@(Math.Truncate(maxco2 * 10) / 10)</td>
                                            <td>@(Math.Truncate(maxEth * 10) / 10)</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        }
                        else if (hasFilters)
                        {
                            <div class="alert alert-warning">No data found for the selected filters.</div>
                        }
                    </div>
                </div>
            }

            else if (selectedTableType == "DoorStatus")
            {
                <!-- 📊 Right Side: Summary Table -->

                <div class="card w-100 mt-md-0 mt-4">
                    <div class="card-header bg-info text-white fs-5">
                        Door Status Summary
                    </div>
                    <div class="card-body">
                        @if (Model.DoorStatusData != null && Model.DoorStatusData.Any())
                        {
                            var total = Model.DoorStatusData.Count();
                            var openCount = Model.DoorStatusData.Count(x => x.Status == "Open");
                            var closeCount = Model.DoorStatusData.Count(x => x.Status == "Close");

                            var firstOpen = Model.DoorStatusData
                                .Where(x => x.Status == "Open")
                                .OrderBy(x => DateTime.Parse(x.Hardwaredate))
                                .FirstOrDefault()?.Hardwaredate;

                            var lastClose = Model.DoorStatusData
                                .Where(x => x.Status == "Close")
                                .OrderByDescending(x => DateTime.Parse(x.Hardwaredate))
                                .FirstOrDefault()?.Hardwaredate;

                            var uniqueDays = Model.DoorStatusData
                                .Select(x => DateTime.TryParse(x.Hardwaredate, out var dt) ? dt.Date : (DateTime?)null)
                                .Where(d => d.HasValue)
                                .Select(d => d.Value)
                                .Distinct()
                                .Count();

                            string mostFrequentStatus = openCount > closeCount ? "Open" : (closeCount > openCount ? "Close" : "Equal");

                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Metric</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr><td><strong>Total Records</strong></td><td>@total</td></tr>
                                        <tr><td><strong>Total Open Events</strong></td><td>@openCount</td></tr>
                                        <tr><td><strong>Total Close Events</strong></td><td>@closeCount</td></tr>
                                        <tr><td><strong>First Door Open</strong></td><td>@(firstOpen != null ? DateTime.Parse(firstOpen).ToString("g") : "-")</td></tr>
                                        <tr><td><strong>Last Door Close</strong></td><td>@(lastClose != null ? DateTime.Parse(lastClose).ToString("g") : "-")</td></tr>
                                        <tr><td><strong>Unique Days of Activity</strong></td><td>@uniqueDays</td></tr>
                                        <tr><td><strong>Most Frequent Status</strong></td><td>@mostFrequentStatus</td></tr>
                                    </tbody>
                                </table>
                            </div>
                        }
                        else if (ViewBag.Selectedstatus != null || ViewBag.StartDate1 != null || ViewBag.EndDate1 != null)
                        {
                            <div class="alert alert-warning mt-3">No door status data found for the selected filters.</div>
                        }
                    </div>
                </div>

            }
        </div>
        <div class="table-responsive">
            <!-- 🔁 Conditional UI blocks based on selectedTableType -->
            @if (selectedTableType == "SensorData")
            {

                <table class="table table-bordered table-striped mt-3" id="coldstorage">
                    <thead class="thead-dark">
                        <tr class="text-center">
                            <th>Id</th>
                            <th>Name</th>
                            <th>Temperature(°C)</th>
                            <th>Humidity(%)</th>
                            <th>PowerStatus</th>
                            <th>DoorStatus</th>
                            <th>CO₂Level<br /> (ppm)</th>
                            <th>Ethylene Level <br />(ppm)</th>
                            <th>FanSpeed</th>
                            <th>DateTime</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int id = 1;
                            if (hasFilters && Model.ColdStorageData?.Any() == true)
                            {
                                foreach (var row in Model.ColdStorageData)
                                {
                                    <tr class="text-center">
                                        <td>@id</td>
                                        <td>@row.Name</td>
                                        <td>@(Math.Truncate(row.Temperature * 10) / 10)</td>
                                        <td>@(Math.Truncate(row.Humidity * 10) / 10)</td>
                                        <td>@row.PowerStatus</td>
                                        <td>@row.DoorStatus</td>
                                        <td>@(Math.Truncate(row.Co2Level * 10) / 10)</td>
                                        <td>@row.EthyleneLevel.ToString("F2")</td>
                                        <td>@row.FanSpeed</td>
                                        <td>@row.Hardwaredate</td>
                                    </tr>
                                    id++;
                                }
                            }
                        }
                    </tbody>
                </table>

            }

            else if (selectedTableType == "DoorStatus")
            {

                <table class="table table-bordered table-striped mt-3" id="Doorstatus">
                    <thead class="thead-dark">
                        <tr class="text-center">
                            <th>Id</th>
                            <th>Unit Name</th>
                            <th>Status</th>
                            <th>DateTime</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int serial = 1;
                            if (hasDoorStatusFilters && Model.DoorStatusData?.Any() == true)
                            {
                                foreach (var row in Model.DoorStatusData)
                                {
                                    <tr class="text-center">
                                        <td>@serial</td>
                                        <td>@row.Unitname</td>
                                        <td>@row.Status</td>
                                        <td>@row.Hardwaredate</td>
                                    </tr>
                                    serial++;
                                }
                            }
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        $('#coldstorage').DataTable({
            "pageLength": 10,
            "lengthMenu": [5, 10, 25, 50],
            "order": [], // Disable initial sort
            "language": {
                "search": "Search:"
            }
        });

        $('#Doorstatus').DataTable({
            "pageLength": 10,
            "lengthMenu": [5, 10, 25, 50],
            "order": [], // Disable initial sort
            "language": {
                "search": "Search:"
            }
        });
    });
</script>

<!--Script -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const startDateInput = document.getElementById("startDate");
        const endDateInput = document.getElementById("endDate");

        function setMinEndDate() {
            if (startDateInput.value) {
                endDateInput.min = startDateInput.value;
                if (endDateInput.value && endDateInput.value < startDateInput.value) {
                    endDateInput.value = startDateInput.value;
                }
            } else {
                endDateInput.removeAttribute("min");
            }
        }

        startDateInput.addEventListener("change", setMinEndDate);

        // Trigger on load in case of existing value
        setMinEndDate();
    });
</script>

<!--Script for doorstatus dates-->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const startDate1 = document.getElementById("startDate2");
        const endDate1 = document.getElementById("endDate2");

        function setMinEndDate2() {
            if (startDate1.value) {
                endDate1.min = startDate1.value;
                if (endDate1.value && endDate1.value < startDate1.value) {
                    endDate1.value = startDate1.value;
                }
            } else {
                endDate1.removeAttribute("min");
            }
        }

        startDate1.addEventListener("change", setMinEndDate2);

        // Trigger on page load
        setMinEndDate2();
    });
</script>
