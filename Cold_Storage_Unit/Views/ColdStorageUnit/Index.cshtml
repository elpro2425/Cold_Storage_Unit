@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@model Cold_Storage_Unit.Models.ColdStorageUnit
<head>
    <style>
        .custom-shadow {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            border: 2px solid #dee2e6;
            border-radius: 8px;
        }
    </style>
</head>
<!--first div in main page -->
<div class="container-fluid w-90 m-lg-2 custom-shadow border p-2 mt-5">
    <h4 class="fst-normal fw-bold">Overview</h4>
    <h5>Monitor the real-time enviromental conditions of your banana cold storage units. Utilize AI powered insights for optimal presenvation.</h5>
</div>
<!--second div in main page -->
<div class="container-fluid custom-shadow border p-2 mt-5 px-2 px-md-4">
    <!-- Main Content -->
    <div class="flex-grow-1 overflow-auto p-2 bg-light rounded-1">
        <div class="d-flex flex-column border border-3 border-success m-3 rounded-3" style="height: 100vh;">
            <!-- Top Container (Text) -->
            <div class="flex-fill mb-3 p-3 rounded bg-light">
                <h4 class="fs-1 fw-bold">  <i class="bi bi-thermometer-half text-danger me-2"></i>Cold Storage Unit 1</h4>

                <div class="row m-4">
                    <!-- Left Column -->
                    <div class="col-md-6">
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-thermometer-half text-danger me-2"></i>Temperature: <span id="temperature">@Model.Temperature</span> °C
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-droplet text-primary me-2"></i>Humidity: <span id="humidity">@Model.Humidity</span> %
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-lightning-charge-fill text-warning me-2"></i>CO₂: <span id="co2">@Model.Co2Level</span> ppm
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-wind text-secondary me-2"></i>Fan Speed: <span id="fanspeed">@Model.FanSpeed</span> RPM
                        </p>
                    </div>

                    <!-- Right Column -->
                    <div class="col-md-6">
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-hash text-info me-2"></i>Ripeness: <span id="ripeness">@Model.RipenessStage</span>
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-door-closed-fill text-success me-2"></i>Door: <span id="door">@Model.DoorStatus</span>
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-clock text-muted me-2"></i>Ethylene: <span id="ethylene">@Model.EthyleneLevel</span> ppm
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-exclamation-circle-fill text-danger me-2"></i>LastUpdated: <span id="lastupdated">@Model.LastUpdated</span>
                        </p>
                    </div>
                </div>

                <!-- Bottom Container (Graph) -->
                <div class="flex-fill p-3 border rounded bg-white">
                    <h4>Environmental Trend</h4>
                    <canvas id="envChart" height="80"></canvas>
                </div>
                <br />
            </div>
        </div>
    </div>

    <div class="flex-grow-1 overflow-auto p-2 bg-light rounded-1">
        <div class="d-flex flex-column border border-3 border-primary m-3 rounded-3" style="height: 100vh;">
            <!-- Unit 2 Header -->
            <div class="flex-fill mb-3 p-3 rounded bg-light">
                <h4 class="fs-1 fw-bold">
                    <i class="bi bi-thermometer-half text-primary me-2"></i>Cold Storage Unit 2
                </h4>

                <!-- Unit 2 Sensor Info -->
                <div class="row m-4">
                    <div class="col-md-6">
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-thermometer-half text-danger me-2"></i>Temperature: <span id="temperature2"></span> °C
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-droplet text-primary me-2"></i>Humidity: <span id="humidity2"></span> %
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-lightning-charge-fill text-warning me-2"></i>CO₂: <span id="co22"></span> ppm
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-wind text-secondary me-2"></i>Fan Speed: <span id="fanspeed2"></span> RPM
                        </p>
                    </div>
                    <div class="col-md-6">
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-hash text-info me-2"></i>Ripeness: <span id="ripeness2"></span>
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-door-closed-fill text-success me-2"></i>Door: <span id="door2"></span>
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-clock text-muted me-2"></i>Ethylene: <span id="ethylene2"></span> ppm
                        </p>
                        <p class="mb-3 fw-bold text-black">
                            <i class="bi bi-exclamation-circle-fill text-danger me-2"></i>LastUpdated: <span id="lastupdated2"></span>
                        </p>
                    </div>
                </div>

                <!-- Unit 2 Chart -->
                <div class="flex-fill p-3 border rounded bg-white">
                    <h4>Environmental Trend</h4>
                    <canvas id="envChart2" height="80"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!--js script for show data on dashboard -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    let dataRows = [];
    let currentIndex = 0;
    let envChart, envChart2;

    // Show one row of data in both units
    function showRow(row) {
        // Update Unit 1
        document.getElementById("temperature").textContent = row.Temperature;
        document.getElementById("humidity").textContent = row.Humidity;
        document.getElementById("co2").textContent = row.Co2Level;
        document.getElementById("fanspeed").textContent = row.FanSpeed;
        document.getElementById("ripeness").textContent = row.RipenessStage;
        document.getElementById("door").textContent = row.DoorStatus;
        document.getElementById("ethylene").textContent = row.EthyleneLevel;
        document.getElementById("lastupdated").textContent = row.LastUpdated;

        // Update Unit 2
        document.getElementById("temperature2").textContent = row.Temperature;
        document.getElementById("humidity2").textContent = row.Humidity;
        document.getElementById("co22").textContent = row.Co2Level;
        document.getElementById("fanspeed2").textContent = row.FanSpeed;
        document.getElementById("ripeness2").textContent = row.RipenessStage;
        document.getElementById("door2").textContent = row.DoorStatus;
        document.getElementById("ethylene2").textContent = row.EthyleneLevel;
        document.getElementById("lastupdated2").textContent = row.LastUpdated;

        // Update both charts
        updateChart(row.Timestamp, row.Temperature, row.Humidity);
        updateChart2(row.Timestamp, row.Temperature, row.Humidity);
    }

    // Fetch data from the server
    function fetchRows() {
        fetch('/ColdStorageUnit/GetRecentRows')
            .then(response => response.json())
            .then(result => {
                dataRows = result.reverse(); // oldest to newest
                currentIndex = 0;
                if (dataRows.length > 0) {
                    showRow(dataRows[0]);
                    startLoopingRows();
                }
            })
            .catch(err => console.error('Error fetching data:', err));
    }

    // Loop through rows every 1 second
    function startLoopingRows() {
        setInterval(() => {
            if (dataRows.length === 0) return;
            showRow(dataRows[currentIndex]);
            currentIndex = (currentIndex + 1) % dataRows.length;
        }, 1000);
    }

    // Chart for Unit 1
    function createWaveChart() {
        const ctx = document.getElementById('envChart').getContext('2d');
        envChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [
                    {
                        label: 'Temperature (°C)',
                        data: [],
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.1)',
                        fill: true,
                        tension: 0.5,
                        pointRadius: 0,
                        borderWidth: 2
                    },
                    {
                        label: 'Humidity (%)',
                        data: [],
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.1)',
                        fill: true,
                        tension: 0.5,
                        pointRadius: 0,
                        borderWidth: 2
                    }
                ]
            },
            options: getChartOptions('Waveform: Temperature & Humidity')
        });
    }

    // Chart for Unit 2
    function createWaveChart2() {
        const ctx = document.getElementById('envChart2').getContext('2d');
        envChart2 = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [
                    {
                        label: 'Temperature (°C)',
                        data: [],
                        borderColor: 'rgba(255, 159, 64, 1)',
                        backgroundColor: 'rgba(255, 159, 64, 0.1)',
                        fill: true,
                        tension: 0.5,
                        pointRadius: 0,
                        borderWidth: 2
                    },
                    {
                        label: 'Humidity (%)',
                        data: [],
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.1)',
                        fill: true,
                        tension: 0.5,
                        pointRadius: 0,
                        borderWidth: 2
                    }
                ]
            },
            options: getChartOptions('Waveform: Temperature & Humidity (Unit 2)')
        });
    }

    // Shared chart options
    function getChartOptions(titleText) {
        return {
            responsive: true,
            animation: {
                duration: 300,
                easing: 'easeInOutSine'
            },
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        font: {
                            size: 14
                        }
                    }
                },
                title: {
                    display: true,
                    text: titleText,
                    font: {
                        size: 18
                    }
                }
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Timestamp'
                    },
                    grid: {
                        display: false
                    }
                },
                y: {
                    beginAtZero: false,
                    title: {
                        display: true,
                        text: 'Value'
                    },
                    grid: {
                        color: 'rgba(0, 0, 0, 0.1)',
                        lineWidth: 1
                    },
                    ticks: {
                        stepSize: 5
                    }
                }
            },
            elements: {
                line: {
                    cubicInterpolationMode: 'monotone'
                }
            }
        };
    }

    // Append new data to Unit 1 chart
    function updateChart(timestamp, temperature, humidity) {
        const maxPoints = 20;

        envChart.data.labels.push(timestamp);
        envChart.data.datasets[0].data.push(temperature);
        envChart.data.datasets[1].data.push(humidity);

        if (envChart.data.labels.length > maxPoints) {
            envChart.data.labels.shift();
            envChart.data.datasets[0].data.shift();
            envChart.data.datasets[1].data.shift();
        }

        envChart.update();
    }

    // Append new data to Unit 2 chart
    function updateChart2(timestamp, temperature, humidity) {
        const maxPoints = 20;

        envChart2.data.labels.push(timestamp);
        envChart2.data.datasets[0].data.push(temperature);
        envChart2.data.datasets[1].data.push(humidity);

        if (envChart2.data.labels.length > maxPoints) {
            envChart2.data.labels.shift();
            envChart2.data.datasets[0].data.shift();
            envChart2.data.datasets[1].data.shift();
        }

        envChart2.update();
    }

    // Run on page load
    window.onload = function () {
        createWaveChart();
        createWaveChart2();
        fetchRows();
    };
</script>
