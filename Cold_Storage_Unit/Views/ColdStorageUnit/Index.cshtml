@model Cold_Storage_Unit.Models.ColdStorageUnit
@{
    ViewBag.Title = "Banana Cold Storage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var unit1Alerts = ViewBag.LatestAlertsUnit1 as List<Cold_Storage_Unit.Models.Alert>;
    var unit2Alerts = ViewBag.LatestAlertsUnit2 as List<Cold_Storage_Unit.Models.Alert>;
}

@section Styles {
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Custom Styles -->
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" />

    <style>
        .custom-shadow {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            border: 2px solid #dee2e6;
        }

        :root {
            --chart-bg-color: #ffffff;
        }

        [data-bs-theme="dark"] {
            --chart-bg-color: #1e1e2f;
        }
        /* 👇 For Mobile view font size, icon size ,header size */
        @@media (max-width: 575.98px) {
            .card-body p {
                font-size: 0.80rem !important;
            }

            .card-body h6 {
                font-size: 0.8rem !important;
            }

            .navbar .bi {
                font-size: 0.7rem !important;
            }

            .navbar .form-check-input {
                width: 1em;
                height: 0.8em;
            }
            /* 👇 Add these for .card-header */
            .card-header h5 {
                font-size: 0.9rem !important;
            }

            .card-header #unit-1-status {
                font-size: 0.75rem !important;
            }

            .card-header .bi {
                font-size: 1rem !important; /* icon size */
            }
        }
    </style>
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />

    <title>@ViewBag.Title</title>

    <!-- Main CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>

<div class="row row-cols-1 row-cols-md-2 g-3">
    <!-- Cold Storage Unit 1 -->
    <div class="col d-flex">
        <div class="card h-100 shadow border border-2 rounded-4">
            <div class="card-header d-flex justify-content-between align-items-center shadow border border-2 rounded-4 m-2">
                <div class="d-flex align-items-center">
                    <i class="bi bi-thermometer-half me-2 fs-4 text-danger"></i>
                    <h5 class="mb-0 fw-bold">Cold Storage Unit 1</h5>
                </div>
                <div id="unit-1-status" class="fw-bold text-uppercase text-success">Online</div>
            </div>
            <div class="card-body">
                <div class="row g-3">

                    <!-- Temperature -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle bg-primary bg-opacity-75 text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-thermometer-half"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-primary mb-2 text-truncate">Temperature</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-1-temperature">@Model.Temperature</span> °C
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Humidity -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle bg-info bg-opacity-75 text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-droplet"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-info mb-2 text-truncate">Humidity</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-1-humidity">@Model.Humidity</span> %
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- CO₂ -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle bg-warning bg-opacity-75 text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-lightning-charge-fill"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-warning mb-2 text-truncate">CO₂</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-1-co2">@Model.Co2Level</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Fan Speed -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle bg-secondary bg-opacity-75 text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-wind"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-secondary mb-2 text-truncate">Fan Speed</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-1-fanspeed">@Model.FanSpeed</span> RPM
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Door -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle bg-success bg-opacity-75 text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-door-closed-fill"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-success mb-2 text-truncate">Door</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-1-door">@Model.DoorStatus</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Ethylene -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle bg-dark bg-opacity-75 text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-clock"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-muted mb-2 text-truncate">Ethylene</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-1-ethylene">@Model.EthyleneLevel</span> ppm
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*<h4>Unit 1 Alerts</h4>*@

                    <div class="table-responsive border rounded-3" style="max-height: 160px; overflow-y: auto;">
                        <table class="table table-striped table-bordered table-hover align-middle text-center mb-0">
                            <thead class="table-secondary sticky-top">
                                <tr>
                                    <th class="text-nowrap">Alert Name</th>
                                    <th>Condition</th> <!-- Removed text-nowrap -->
                                    <th class="text-nowrap">Severity</th>
                                    <th class="text-nowrap">Time</th>
                                    <th class="text-nowrap">ActualData</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (unit2Alerts != null && unit1Alerts.Count > 0)
                                {
                                    foreach (var alert in unit1Alerts)
                                    {
                                        <tr>
                                            <td class="text-nowrap">@alert.Alert_Name</td>
                                            <td>@alert.Condition_Trigger</td> <!-- Allow wrap -->
                                            <td class="text-nowrap">@alert.Severity</td>
                                            <td class="text-nowrap">@DateTime.Parse(alert.Alert_Date).ToString("hh:mm tt")</td>
                                            <td class="text-nowrap">@alert.Actual_Value</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center">No alerts found for Unit 2.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Chart for Unit 1 -->
                    <div class="col-12">
                        <div class="chart-wrapper border rounded p-3">
                            <h6 class="text-success">Temperature & Humidity</h6>
                            <div class="position-relative" style="width:100%;">
                                <canvas id="envChart" style="width:100%;" height="250"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cold Storage Unit 2 -->
    <div class="col d-flex">
        <div class="card w-100 h-100 shadow border border-2 rounded-4">
            <div class="card-header d-flex justify-content-between align-items-center shadow border border-2 rounded-4 m-2">
                <div class="d-flex align-items-center">
                    <i class="bi bi-thermometer-half me-2 fs-4 text-primary"></i>
                    <h5 class="mb-0 fw-bold">Cold Storage Unit 2</h5>
                </div>
                <div id="unit-2-status" class="fw-bold text-uppercase text-success">Online</div>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <!-- Temperature -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px; background-color: #F39C12;">
                                    <i class="bi bi-thermometer-half"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-warning mb-2 text-truncate">Temperature</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-2-temperature">@Model.Temperature</span> °C
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Humidity -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px; background-color: #3498DB;">
                                    <i class="bi bi-droplet"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-info mb-2 text-truncate">Humidity</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-2-humidity">@Model.Humidity</span> %
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- CO₂ -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px; background-color: #E67E22;">
                                    <i class="bi bi-lightning-charge-fill"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-warning mb-2 text-truncate">CO₂</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-2-co2">@Model.Co2Level</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Fan Speed -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px; background-color: #8E44AD;">
                                    <i class="bi bi-wind"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-purple mb-2 text-truncate">Fan Speed</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-2-fanspeed">@Model.FanSpeed</span> RPM
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Door -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px; background-color: #27AE60;">
                                    <i class="bi bi-door-closed-fill"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-success mb-2 text-truncate">Door</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-2-door">@Model.DoorStatus</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Ethylene -->
                    <div class="col-4 col-sm-4 col-lg-4 d-flex">
                        <div class="card text-center border-0 custom-shadow w-100 d-flex flex-column h-100">
                            <div class="card-body d-flex align-items-center gap-3 flex-wrap">
                                <div class="rounded-circle text-white d-flex align-items-center justify-content-center flex-shrink-0"
                                     style="width: 40px; height: 40px; background-color: #34495E;">
                                    <i class="bi bi-clock"></i>
                                </div>
                                <div class="flex-grow-1 text-end" style="min-width: 0;">
                                    <h6 class="fw-bold text-muted mb-2 text-truncate">Ethylene</h6>
                                    <p class="mb-0 fw-semibold fs-5 text-truncate">
                                        <span id="unit-2-ethylene">@Model.EthyleneLevel</span> ppm
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*<h4>Unit 2 Alerts</h4>*@
                   
                        <div class="table-responsive border rounded-3"  style="max-height: 160px; overflow-y: auto;">
                            <table class="table table-striped table-bordered table-hover align-middle text-center mb-0">
                                <thead class="table-secondary sticky-top">
                                    <tr>
                                        <th class="text-nowrap">Alert Name</th>
                                        <th class="text-nowrap">Condition</th>
                                        <th class="text-nowrap">Severity</th>
                                        <th class="text-nowrap">Time</th>
                                        <th class="text-nowrap">ActualData</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (unit2Alerts != null && unit2Alerts.Count > 0)
                                    {
                                        foreach (var alert in unit2Alerts)
                                        {
                                            <tr>
                                                <td class="text-nowrap">@alert.Alert_Name</td>
                                                <td class="text-nowrap">@alert.Condition_Trigger</td>
                                                <td class="text-nowrap">@alert.Severity</td>
                                                <td class="text-nowrap">@DateTime.Parse(alert.Alert_Date).ToString("hh:mm tt")</td>
                                                <td class="text-nowrap">@alert.Actual_Value</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="4" class="text-center">No alerts found for Unit 2.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    <!-- Chart for Unit 2 -->
                    <div class="col-12">
                        <div class="chart-wrapper border rounded p-3">
                            <h6 class="text-success">Temperature & Humidity</h6>
                            <div class="position-relative" style="width:100%;">
                                <canvas id="envChart2" style="width:100%;" height="250"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!-- script for chart -->
<script>
    // Chart 1 initialization
    const ctx1 = document.getElementById('envChart').getContext('2d');
    let chart1 = new Chart(ctx1, {
        type: 'line',
        data: {
            labels: [], // loaded from server
            datasets: [
                {
                    label: 'Temperature (°C)',
                    data: [],
                    borderColor: 'red',
                    backgroundColor: 'rgba(255, 0, 0, 0.1)',
                    fill: true,
                    tension: 0.3
                },
                {
                    label: 'Humidity (%)',
                    data: [],
                    borderColor: 'blue',
                    backgroundColor: 'rgba(0, 0, 255, 0.1)',
                    fill: true,
                    tension: 0.3
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { position: 'top' }
            },
            interaction: {
                mode: 'index',
                intersect: false
            },
            scales: {
                x: {
                    title: { display: true, text: 'Timestamp' },
                    ticks: {
                        autoSkip: true,
                        maxRotation: 45,
                        minRotation: 0
                    }
                },
                y: { beginAtZero: true }
            }
        }
    });

    // Chart 2 initialization
    const ctx2 = document.getElementById('envChart2').getContext('2d');
    let chart2 = new Chart(ctx2, {
        type: 'line',
        data: {
            labels: [], // loaded from server
            datasets: [
                {
                    label: 'Temperature (°C)',
                    data: [],
                    borderColor: 'orange',
                    backgroundColor: 'rgba(255,165,0,0.1)',
                    fill: true,
                    tension: 0.3
                },
                {
                    label: 'Humidity (%)',
                    data: [],
                    borderColor: 'green',
                    backgroundColor: 'rgba(0,128,0,0.1)',
                    fill: true,
                    tension: 0.3
                }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { position: 'top' }
            },
            interaction: {
                mode: 'index',
                intersect: false
            },
            scales: {
                x: {
                    title: { display: true, text: 'Timestamp' },
                    ticks: {
                        autoSkip: true,
                        maxRotation: 45,
                        minRotation: 0
                    }
                },
                y: { beginAtZero: true }
            }
        }
    });

    // Chart update function
    function updateCharts() {
        fetch('/ColdStorageUnit/GetChartData')
            .then(res => res.json())
            .then(data => {
                // Chart 1
                chart1.data.labels = data.timestamps1;
                chart1.data.datasets[0].data = data.temperatures1;
                chart1.data.datasets[1].data = data.humidities1;
                chart1.update();

                // Chart 2
                chart2.data.labels = data.timestamps2;
                chart2.data.datasets[0].data = data.temperatures2;
                chart2.data.datasets[1].data = data.humidities2;
                chart2.update();
            })
            .catch(error => {
                console.error('Failed to update charts:', error);
            });
    }

    // Initial chart update
    updateCharts();

    // Refresh charts every 8 seconds
    setInterval(updateCharts, 8000);
</script>

<!-- script for cards update -->
<script>
    function parseCustomDate(dateStr) {
        // Expects format like "26/07/2025, 03:14:22 PM"
        const parts = dateStr.trim().split(',');
        if (parts.length !== 2) return null;

        const [datePart, timePart] = parts.map(p => p.trim());

        const [day, month, year] = datePart.split('/').map(Number);
        let [time, period] = timePart.split(' ');
        let [hours, minutes, seconds] = time.split(':').map(Number);

        if (period.toUpperCase() === "PM" && hours !== 12) hours += 12;
        if (period.toUpperCase() === "AM" && hours === 12) hours = 0;

        return new Date(year, month - 1, day, hours, minutes, seconds);
    }

    function updateCardData() {
        fetch('/ColdStorageUnit/GetLatestRows')
            .then(res => res.json())
            .then(data => {
                data.forEach(unit => {
                    const d = unit.Latest;
                    if (!d) return;

                    const unitId = d.UnitName.replace(/\s+/g, '-').toLowerCase();

                    // Update the UI values
                    document.getElementById(`${unitId}-temperature`).textContent = d.Temperature.toFixed(1);
                    document.getElementById(`${unitId}-humidity`).textContent = d.Humidity.toFixed(1);
                    document.getElementById(`${unitId}-co2`).textContent = d.Co2Level.toFixed(1);
                    document.getElementById(`${unitId}-fanspeed`).textContent = d.FanSpeed;
                    document.getElementById(`${unitId}-door`).textContent = d.DoorStatus;
                    document.getElementById(`${unitId}-ethylene`).textContent = d.EthyleneLevel.toFixed(1);

                    // Parse hardware date from server
                    const hwDate = parseCustomDate(d.Hardwaredate);
                    const sysDate = new Date(); // Current system/browser date

                    if (!hwDate) {
                        console.warn("Invalid hardware date format for unit:", d.UnitName);
                        return;
                    }

                    const diffMs = Math.abs(sysDate - hwDate);
                    const diffSeconds = diffMs / 1000;

                    const statusElement = document.getElementById(`${unitId}-status`);
                    if (statusElement) {
                        let timeAgoText = '';
                        const totalMinutes = Math.floor(diffSeconds / 60);
                        const totalHours = Math.floor(diffSeconds / 3600);
                        const remainingMinutes = totalMinutes % 60;
                        const remainingSeconds = Math.floor(diffSeconds % 60);

                        if (totalHours > 0) {
                            timeAgoText = `${totalHours} hr`;
                            if (remainingMinutes > 0) {
                                timeAgoText += ` ${remainingMinutes} min`;
                            }
                        } else if (totalMinutes > 0) {
                            timeAgoText = `${totalMinutes} min`;
                            if (remainingSeconds > 0) {
                                timeAgoText += ` ${remainingSeconds} sec`;
                            }
                        } else {
                            timeAgoText = `${remainingSeconds} sec`;
                        }

                        const isOffline = diffSeconds > 15;
                        const mainText = isOffline ? "offline" : "online";

                        // Toggle online/offline color
                        statusElement.classList.toggle("text-danger", isOffline);
                        statusElement.classList.toggle("text-success", !isOffline);

                        // Bracket text follows Bootstrap body color (theme-aware)
                        statusElement.innerHTML = `
        ${mainText}
        <span class="text-body-secondary" style="font-size: 0.6em;">(${timeAgoText} ago)</span>
    `;
                    }
                });
            });
    }

    // Initial load + periodic refresh
    updateCardData();
    setInterval(updateCardData, 8000);
</script>






